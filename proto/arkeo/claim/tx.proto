syntax = "proto3";

package arkeonetwork.arkeo.claim;

// this line is used by starport scaffolding # proto/tx/import
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
option go_package = "github.com/arkeonetwork/arkeo/x/claim/types";

// Msg defines the Msg service.
service Msg {
  rpc ClaimEth   (MsgClaimEth  ) returns (MsgClaimEthResponse  );
  rpc ClaimArkeo (MsgClaimArkeo) returns (MsgClaimArkeoResponse);
  rpc TransferClaim(MsgTransferClaim) returns (MsgTransferClaimResponse);
  rpc AddClaim(MsgAddClaim) returns (MsgAddClaimResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}
message MsgClaimEth {
  string creator     = 1;
  string eth_address = 2; // the adress the claim is for
  string signature   = 3; // EIP712 signature that has to be signed by ethAddress
}

message MsgClaimEthResponse {}

message MsgClaimArkeo {
  string creator = 1;
}

message MsgClaimArkeoResponse {}

message MsgTransferClaim {
  string creator = 1;
  string toAddress = 2;
}

message MsgTransferClaimResponse {
}

message MsgAddClaim {
  string creator = 1;
  string chain = 2;
  string address = 3;
  repeated cosmos.base.v1beta1.Coin amount = 4 [(gogoproto.nullable) = false];
}

message MsgAddClaimResponse {
}

// this line is used by starport scaffolding # proto/tx/message