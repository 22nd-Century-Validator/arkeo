syntax = "proto3";
package arkeo.arkeo;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/arkeonetwork/arkeo/x/arkeo/types";

enum ProviderStatus {
  OFFLINE = 0;
  ONLINE = 1;
}

message Provider {
  bytes pub_key = 1
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  int32 service = 2
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.Service" ];
  string metadata_uri = 3;
  uint64 metadata_nonce = 4;
  ProviderStatus status = 5;
  int64 min_contract_duration = 6;
  int64 max_contract_duration = 7;
  repeated ContractRate rates = 8;
  string bond = 9 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  int64 last_update = 10;
  int64 settlement_duration = 11;
}

enum UserType {
  SINGLE_USER = 0;
  MULTI_USER = 1;
}

enum MeterType {
  PAY_PER_BLOCK = 0; // previously called a Subscription
  PAY_PER_CALL = 1;  // previously called Pay as you go 
}

message ContractRate {
  MeterType meter_type = 1;
  UserType user_type = 2;
  repeated cosmos.base.v1beta1.Coin rates = 3 [ (gogoproto.nullable) = false ];
}

message CallRateLimit {
  uint64 number_of_calls = 1;
  uint64 duration = 2;
}

message Restrictions {
  CallRateLimit rate_limit_per_user = 1;
  CallRateLimit rate_limit_per_contract = 2;
  CallRateLimit rate_limit_per_ip_address = 3;
  repeated string allowed_origins = 4;
  repeated string allowed_ip_addresses = 5;
}

message ContractOptions {
  UserType user_type = 1;
  MeterType meter_type = 2;
  Restrictions restrictions = 3;
}

message Contract {
  bytes provider = 1
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  int32 service = 2
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.Service" ];
  bytes client = 3
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  bytes delegate = 4
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  ContractOptions options = 5 [(gogoproto.nullable) = false ];
  int64 height = 6;
  int64 duration = 7;
  cosmos.base.v1beta1.Coin rate = 8 [ (gogoproto.nullable) = false ];
  string deposit = 9 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string paid = 10 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  int64 nonce = 11;
  int64 settlement_height = 12;
  uint64 id = 13;
  int64 settlement_duration = 14;
}

message ContractSet { repeated uint64 contract_ids = 1 [ packed = true ]; }

message ContractExpirationSet {
  int64 height = 1;
  ContractSet contract_set = 2;
}

message UserContractSet {
  bytes user = 1
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  ContractSet contract_set = 2;
}
