syntax = "proto3";
package arkeo.arkeo;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/arkeonetwork/arkeo/x/arkeo/types";

enum ProviderStatus {
  OFFLINE = 0;
  ONLINE = 1;
}

enum UserType {
  SINGLE_USER = 0;
  MULTI_USER = 1;
}

enum MeterType {
  PAY_PER_BLOCK = 0;
  PAY_PER_CALL = 1;
}

message Provider {
  string pub_key = 1
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  int32 service = 2
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.Service" ];
  string metadata_uri = 3;
  uint64 metadata_nonce = 4;
  ProviderStatus status = 5;
  int64 min_contract_duration = 6;
  int64 max_contract_duration = 7;
  repeated Rate rates = 8;
  string bond = 9 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  int64 last_update = 10;
  int64 settlement_duration = 11;
}

message Rate {
  MeterType meter_type = 1;
  UserType user_type = 2;
  uint64 rate = 3;
}

message RateLimit {
  uint64 number_of_calls = 1;
  uint64 duration = 2;
}

message Restrictions {
  RateLimit rate_limit_per_user = 1;
  RateLimit rate_limit_per_contract = 3;
  RateLimit rate_limit_per_ip_address = 5;
  string allowed_origin = 6;
  string allowed_ip_address = 7;
}

message Contract {
  string provider = 1
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  int32 service = 2
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.Service" ];
  string client = 3
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  string delegate = 4
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  MeterType meter_type = 5;
  UserType user_type = 6;
  int64 height = 7;
  int64 duration = 8;
  int64 rate = 9;
  string deposit = 10 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string paid = 11 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  map<string, int64> nonces = 12 [(gogoproto.castkey) = "github.com/arkeonetwork/arkeo/common.PubKey"];
  int64 settlement_height = 13;
  uint64 id = 14;
  int64 settlement_duration = 15;
  Restrictions restrictions = 16;
}

message ContractSet { repeated uint64 contract_ids = 1 [ packed = true ]; }

message ContractExpirationSet {
  int64 height = 1;
  ContractSet contract_set = 2;
}

message UserContractSet {
  string user = 1
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  ContractSet contract_set = 2;
}
